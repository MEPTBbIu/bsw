@import url("https://cdnjs.cloudflare.com/ajax/libs/normalize/7.0.0/normalize.min.css");
/**
 * The css property used for elevation. In most cases this should not be changed. It is exposed
 * as a variable for abstraction / easy use when needing to reference the property directly, for
 * example in a `will-change` rule.
 */
/**
 * The default duration value for elevation transitions.
 */
/**
 * The default easing value for elevation transitions.
 */
/**
 * Applies the correct css rules to an element to give it the elevation specified by $z-value.
 * The $z-value must be between 0 and 24.
 */
/**
 * Returns a string that can be used as the value for a `transition` property for elevation.
 * Calling this function directly is useful in situations where a component needs to transition
 * more than one property.
 *
 * ```scss
 * .foo {
 *   transition: mdc-elevation-transition-rule(), opacity 100ms ease;
 *   will-change: $mdc-elevation-property, opacity;
 * }
 * ```
 */
/**
 * Applies the correct css rules needed to have an element transition between elevations.
 * This mixin should be applied to elements whose elevation values will change depending on their
 * context (e.g. when active or disabled).
 */


.radio-col
{
	display: flex;
	flex-direction: column;
	padding: 15px 10px;
}

.radio-col .radio-col--label
{
	color: rgba(0,0,0,.5);
	text-align: inherit;
	/* top: 5px; */
	/* left: 14px; */
	font-size: 80%;
	text-transform: uppercase;
	font-weight: 500;
	padding-left: 10px;
}

.checkbox-hero
{
	display: -webkit-box;
	display: -ms-flexbox;
	display: flex;
	-webkit-box-orient: horizontal;
	-webkit-box-direction: normal;
	-ms-flex-flow: row nowrap;
	flex-flow: row nowrap;
	-webkit-box-align: center;
	-ms-flex-align: center;
	align-items: center;
	-webkit-box-pack: center;
	-ms-flex-pack: center;
	//justify-content: center;

	//background-color: rgba(0, 0, 0, 0.05);
}
.hero
{
	display: -webkit-box;
	display: -ms-flexbox;
	display: flex;
	-webkit-box-orient: horizontal;
	-webkit-box-direction: normal;
	-ms-flex-flow: row nowrap;
	flex-flow: row nowrap;
	-webkit-box-align: center;
	-ms-flex-align: center;
	align-items: center;
	-webkit-box-pack: center;
	-ms-flex-pack: center;
	justify-content: center;
	height: 360px;
	min-height: 360px;
	background-color: rgba(0, 0, 0, 0.05);
}


@keyframes mdc-ripple-fg-radius-in
{
	from
	{
		animation-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
		transform: translate(var(--mdc-ripple-fg-translate-start, 0)) scale(1);
	}

	to
	{
		transform: translate(var(--mdc-ripple-fg-translate-end, 0)) scale(var(--mdc-ripple-fg-scale, 1));
	}
}

@keyframes mdc-ripple-fg-opacity-in
{
	from
	{
		animation-timing-function: linear;
		opacity: 0;
	}

	to
	{
		opacity: 1;
	}
}

@keyframes mdc-ripple-fg-opacity-out
{
	from
	{
		animation-timing-function: linear;
		opacity: 1;
	}

	to
	{
		opacity: 0;
	}
}

.mdc-ripple-surface--test-edge-var-bug
{
	--mdc-ripple-surface-test-edge-var: 1px solid #000;
	visibility: hidden;
}

.mdc-ripple-surface--test-edge-var-bug::before
{
	border: var(--mdc-ripple-surface-test-edge-var);
}

/* TODO(sgomes): Figure out what to do about desktop font sizes. */
/* TODO(sgomes): Figure out what to do about i18n and i18n font sizes. */
:root
{
	--mdc-theme-primary: #212121;
	--mdc-theme-primary-light: #686868;
	--mdc-theme-primary-dark: #454545;
	--mdc-theme-secondary: #64dd17;
	--mdc-theme-secondary-light: #8ced4f;
	--mdc-theme-secondary-dark: #479c10;
	--mdc-theme-background: #fff;
	--mdc-theme-text-primary-on-primary: white;
	--mdc-theme-text-secondary-on-primary: rgba(255, 255, 255, 0.7);
	--mdc-theme-text-hint-on-primary: rgba(255, 255, 255, 0.5);
	--mdc-theme-text-disabled-on-primary: rgba(255, 255, 255, 0.5);
	--mdc-theme-text-icon-on-primary: rgba(255, 255, 255, 0.5);
	--mdc-theme-text-primary-on-primary-light: white;
	--mdc-theme-text-secondary-on-primary-light: rgba(255, 255, 255, 0.7);
	--mdc-theme-text-hint-on-primary-light: rgba(255, 255, 255, 0.5);
	--mdc-theme-text-disabled-on-primary-light: rgba(255, 255, 255, 0.5);
	--mdc-theme-text-icon-on-primary-light: rgba(255, 255, 255, 0.5);
	--mdc-theme-text-primary-on-primary-dark: white;
	--mdc-theme-text-secondary-on-primary-dark: rgba(255, 255, 255, 0.7);
	--mdc-theme-text-hint-on-primary-dark: rgba(255, 255, 255, 0.5);
	--mdc-theme-text-disabled-on-primary-dark: rgba(255, 255, 255, 0.5);
	--mdc-theme-text-icon-on-primary-dark: rgba(255, 255, 255, 0.5);
	--mdc-theme-text-primary-on-secondary: rgba(0, 0, 0, 0.87);
	--mdc-theme-text-secondary-on-secondary: rgba(0, 0, 0, 0.54);
	--mdc-theme-text-hint-on-secondary: rgba(0, 0, 0, 0.38);
	--mdc-theme-text-disabled-on-secondary: rgba(0, 0, 0, 0.38);
	--mdc-theme-text-icon-on-secondary: rgba(0, 0, 0, 0.38);
	--mdc-theme-text-primary-on-secondary-light: rgba(0, 0, 0, 0.87);
	--mdc-theme-text-secondary-on-secondary-light: rgba(0, 0, 0, 0.54);
	--mdc-theme-text-hint-on-secondary-light: rgba(0, 0, 0, 0.38);
	--mdc-theme-text-disabled-on-secondary-light: rgba(0, 0, 0, 0.38);
	--mdc-theme-text-icon-on-secondary-light: rgba(0, 0, 0, 0.38);
	--mdc-theme-text-primary-on-secondary-dark: white;
	--mdc-theme-text-secondary-on-secondary-dark: rgba(255, 255, 255, 0.7);
	--mdc-theme-text-hint-on-secondary-dark: rgba(255, 255, 255, 0.5);
	--mdc-theme-text-disabled-on-secondary-dark: rgba(255, 255, 255, 0.5);
	--mdc-theme-text-icon-on-secondary-dark: rgba(255, 255, 255, 0.5);
	--mdc-theme-text-primary-on-background: rgba(0, 0, 0, 0.87);
	--mdc-theme-text-secondary-on-background: rgba(0, 0, 0, 0.54);
	--mdc-theme-text-hint-on-background: rgba(0, 0, 0, 0.38);
	--mdc-theme-text-disabled-on-background: rgba(0, 0, 0, 0.38);
	--mdc-theme-text-icon-on-background: rgba(0, 0, 0, 0.38);
	--mdc-theme-text-primary-on-light: rgba(0, 0, 0, 0.87);
	--mdc-theme-text-secondary-on-light: rgba(0, 0, 0, 0.54);
	--mdc-theme-text-hint-on-light: rgba(0, 0, 0, 0.38);
	--mdc-theme-text-disabled-on-light: rgba(0, 0, 0, 0.38);
	--mdc-theme-text-icon-on-light: rgba(0, 0, 0, 0.38);
	--mdc-theme-text-primary-on-dark: white;
	--mdc-theme-text-secondary-on-dark: rgba(255, 255, 255, 0.7);
	--mdc-theme-text-hint-on-dark: rgba(255, 255, 255, 0.5);
	--mdc-theme-text-disabled-on-dark: rgba(255, 255, 255, 0.5);
	--mdc-theme-text-icon-on-dark: rgba(255, 255, 255, 0.5);
}

.mdc-theme--background
{
	/* @alternate */
	background-color: #fff;
	background-color: var(--mdc-theme-background, #fff);
}

.mdc-theme--primary
{
	/* @alternate */
	color: #212121 !important;
	color: var(--mdc-theme-primary, #212121) !important;
}

.mdc-theme--primary-light
{
	/* @alternate */
	color: #686868 !important;
	color: var(--mdc-theme-primary-light, #686868) !important;
}

.mdc-theme--primary-dark
{
	/* @alternate */
	color: #454545 !important;
	color: var(--mdc-theme-primary-dark, #454545) !important;
}

.mdc-theme--secondary
{
	/* @alternate */
	color: #64dd17 !important;
	color: var(--mdc-theme-secondary, #64dd17) !important;
}

.mdc-theme--secondary-light
{
	/* @alternate */
	color: #8ced4f !important;
	color: var(--mdc-theme-secondary-light, #8ced4f) !important;
}

.mdc-theme--secondary-dark
{
	/* @alternate */
	color: #479c10 !important;
	color: var(--mdc-theme-secondary-dark, #479c10) !important;
}

.mdc-theme--text-primary-on-primary
{
	/* @alternate */
	color: white !important;
	color: var(--mdc-theme-text-primary-on-primary, white) !important;
}

.mdc-theme--text-secondary-on-primary
{
	/* @alternate */
	color: rgba(255, 255, 255, 0.7) !important;
	color: var(--mdc-theme-text-secondary-on-primary, rgba(255, 255, 255, 0.7)) !important;
}

.mdc-theme--text-hint-on-primary
{
	/* @alternate */
	color: rgba(255, 255, 255, 0.5) !important;
	color: var(--mdc-theme-text-hint-on-primary, rgba(255, 255, 255, 0.5)) !important;
}

.mdc-theme--text-disabled-on-primary
{
	/* @alternate */
	color: rgba(255, 255, 255, 0.5) !important;
	color: var(--mdc-theme-text-disabled-on-primary, rgba(255, 255, 255, 0.5)) !important;
}

.mdc-theme--text-icon-on-primary
{
	/* @alternate */
	color: rgba(255, 255, 255, 0.5) !important;
	color: var(--mdc-theme-text-icon-on-primary, rgba(255, 255, 255, 0.5)) !important;
}

.mdc-theme--text-primary-on-primary-light
{
	/* @alternate */
	color: white !important;
	color: var(--mdc-theme-text-primary-on-primary-light, white) !important;
}

.mdc-theme--text-secondary-on-primary-light
{
	/* @alternate */
	color: rgba(255, 255, 255, 0.7) !important;
	color: var(--mdc-theme-text-secondary-on-primary-light, rgba(255, 255, 255, 0.7)) !important;
}

.mdc-theme--text-hint-on-primary-light
{
	/* @alternate */
	color: rgba(255, 255, 255, 0.5) !important;
	color: var(--mdc-theme-text-hint-on-primary-light, rgba(255, 255, 255, 0.5)) !important;
}

.mdc-theme--text-disabled-on-primary-light
{
	/* @alternate */
	color: rgba(255, 255, 255, 0.5) !important;
	color: var(--mdc-theme-text-disabled-on-primary-light, rgba(255, 255, 255, 0.5)) !important;
}

.mdc-theme--text-icon-on-primary-light
{
	/* @alternate */
	color: rgba(255, 255, 255, 0.5) !important;
	color: var(--mdc-theme-text-icon-on-primary-light, rgba(255, 255, 255, 0.5)) !important;
}

.mdc-theme--text-primary-on-primary-dark
{
	/* @alternate */
	color: white !important;
	color: var(--mdc-theme-text-primary-on-primary-dark, white) !important;
}

.mdc-theme--text-secondary-on-primary-dark
{
	/* @alternate */
	color: rgba(255, 255, 255, 0.7) !important;
	color: var(--mdc-theme-text-secondary-on-primary-dark, rgba(255, 255, 255, 0.7)) !important;
}

.mdc-theme--text-hint-on-primary-dark
{
	/* @alternate */
	color: rgba(255, 255, 255, 0.5) !important;
	color: var(--mdc-theme-text-hint-on-primary-dark, rgba(255, 255, 255, 0.5)) !important;
}

.mdc-theme--text-disabled-on-primary-dark
{
	/* @alternate */
	color: rgba(255, 255, 255, 0.5) !important;
	color: var(--mdc-theme-text-disabled-on-primary-dark, rgba(255, 255, 255, 0.5)) !important;
}

.mdc-theme--text-icon-on-primary-dark
{
	/* @alternate */
	color: rgba(255, 255, 255, 0.5) !important;
	color: var(--mdc-theme-text-icon-on-primary-dark, rgba(255, 255, 255, 0.5)) !important;
}

.mdc-theme--text-primary-on-secondary
{
	/* @alternate */
	color: rgba(0, 0, 0, 0.87) !important;
	color: var(--mdc-theme-text-primary-on-secondary, rgba(0, 0, 0, 0.87)) !important;
}

.mdc-theme--text-secondary-on-secondary
{
	/* @alternate */
	color: rgba(0, 0, 0, 0.54) !important;
	color: var(--mdc-theme-text-secondary-on-secondary, rgba(0, 0, 0, 0.54)) !important;
}

.mdc-theme--text-hint-on-secondary
{
	/* @alternate */
	color: rgba(0, 0, 0, 0.38) !important;
	color: var(--mdc-theme-text-hint-on-secondary, rgba(0, 0, 0, 0.38)) !important;
}

.mdc-theme--text-disabled-on-secondary
{
	/* @alternate */
	color: rgba(0, 0, 0, 0.38) !important;
	color: var(--mdc-theme-text-disabled-on-secondary, rgba(0, 0, 0, 0.38)) !important;
}

.mdc-theme--text-icon-on-secondary
{
	/* @alternate */
	color: rgba(0, 0, 0, 0.38) !important;
	color: var(--mdc-theme-text-icon-on-secondary, rgba(0, 0, 0, 0.38)) !important;
}

.mdc-theme--text-primary-on-secondary-light
{
	/* @alternate */
	color: rgba(0, 0, 0, 0.87) !important;
	color: var(--mdc-theme-text-primary-on-secondary-light, rgba(0, 0, 0, 0.87)) !important;
}

.mdc-theme--text-secondary-on-secondary-light
{
	/* @alternate */
	color: rgba(0, 0, 0, 0.54) !important;
	color: var(--mdc-theme-text-secondary-on-secondary-light, rgba(0, 0, 0, 0.54)) !important;
}

.mdc-theme--text-hint-on-secondary-light
{
	/* @alternate */
	color: rgba(0, 0, 0, 0.38) !important;
	color: var(--mdc-theme-text-hint-on-secondary-light, rgba(0, 0, 0, 0.38)) !important;
}

.mdc-theme--text-disabled-on-secondary-light
{
	/* @alternate */
	color: rgba(0, 0, 0, 0.38) !important;
	color: var(--mdc-theme-text-disabled-on-secondary-light, rgba(0, 0, 0, 0.38)) !important;
}

.mdc-theme--text-icon-on-secondary-light
{
	/* @alternate */
	color: rgba(0, 0, 0, 0.38) !important;
	color: var(--mdc-theme-text-icon-on-secondary-light, rgba(0, 0, 0, 0.38)) !important;
}

.mdc-theme--text-primary-on-secondary-dark
{
	/* @alternate */
	color: white !important;
	color: var(--mdc-theme-text-primary-on-secondary-dark, white) !important;
}

.mdc-theme--text-secondary-on-secondary-dark
{
	/* @alternate */
	color: rgba(255, 255, 255, 0.7) !important;
	color: var(--mdc-theme-text-secondary-on-secondary-dark, rgba(255, 255, 255, 0.7)) !important;
}

.mdc-theme--text-hint-on-secondary-dark
{
	/* @alternate */
	color: rgba(255, 255, 255, 0.5) !important;
	color: var(--mdc-theme-text-hint-on-secondary-dark, rgba(255, 255, 255, 0.5)) !important;
}

.mdc-theme--text-disabled-on-secondary-dark
{
	/* @alternate */
	color: rgba(255, 255, 255, 0.5) !important;
	color: var(--mdc-theme-text-disabled-on-secondary-dark, rgba(255, 255, 255, 0.5)) !important;
}

.mdc-theme--text-icon-on-secondary-dark
{
	/* @alternate */
	color: rgba(255, 255, 255, 0.5) !important;
	color: var(--mdc-theme-text-icon-on-secondary-dark, rgba(255, 255, 255, 0.5)) !important;
}

.mdc-theme--text-primary-on-background
{
	/* @alternate */
	color: rgba(0, 0, 0, 0.87) !important;
	color: var(--mdc-theme-text-primary-on-background, rgba(0, 0, 0, 0.87)) !important;
}

.mdc-theme--text-secondary-on-background
{
	/* @alternate */
	color: rgba(0, 0, 0, 0.54) !important;
	color: var(--mdc-theme-text-secondary-on-background, rgba(0, 0, 0, 0.54)) !important;
}

.mdc-theme--text-hint-on-background
{
	/* @alternate */
	color: rgba(0, 0, 0, 0.38) !important;
	color: var(--mdc-theme-text-hint-on-background, rgba(0, 0, 0, 0.38)) !important;
}

.mdc-theme--text-disabled-on-background
{
	/* @alternate */
	color: rgba(0, 0, 0, 0.38) !important;
	color: var(--mdc-theme-text-disabled-on-background, rgba(0, 0, 0, 0.38)) !important;
}

.mdc-theme--text-icon-on-background
{
	/* @alternate */
	color: rgba(0, 0, 0, 0.38) !important;
	color: var(--mdc-theme-text-icon-on-background, rgba(0, 0, 0, 0.38)) !important;
}

.mdc-theme--text-primary-on-light
{
	/* @alternate */
	color: rgba(0, 0, 0, 0.87) !important;
	color: var(--mdc-theme-text-primary-on-light, rgba(0, 0, 0, 0.87)) !important;
}

.mdc-theme--text-secondary-on-light
{
	/* @alternate */
	color: rgba(0, 0, 0, 0.54) !important;
	color: var(--mdc-theme-text-secondary-on-light, rgba(0, 0, 0, 0.54)) !important;
}

.mdc-theme--text-hint-on-light
{
	/* @alternate */
	color: rgba(0, 0, 0, 0.38) !important;
	color: var(--mdc-theme-text-hint-on-light, rgba(0, 0, 0, 0.38)) !important;
}

.mdc-theme--text-disabled-on-light
{
	/* @alternate */
	color: rgba(0, 0, 0, 0.38) !important;
	color: var(--mdc-theme-text-disabled-on-light, rgba(0, 0, 0, 0.38)) !important;
}

.mdc-theme--text-icon-on-light
{
	/* @alternate */
	color: rgba(0, 0, 0, 0.38) !important;
	color: var(--mdc-theme-text-icon-on-light, rgba(0, 0, 0, 0.38)) !important;
}

.mdc-theme--text-primary-on-dark
{
	/* @alternate */
	color: white !important;
	color: var(--mdc-theme-text-primary-on-dark, white) !important;
}

.mdc-theme--text-secondary-on-dark
{
	/* @alternate */
	color: rgba(255, 255, 255, 0.7) !important;
	color: var(--mdc-theme-text-secondary-on-dark, rgba(255, 255, 255, 0.7)) !important;
}

.mdc-theme--text-hint-on-dark
{
	/* @alternate */
	color: rgba(255, 255, 255, 0.5) !important;
	color: var(--mdc-theme-text-hint-on-dark, rgba(255, 255, 255, 0.5)) !important;
}

.mdc-theme--text-disabled-on-dark
{
	/* @alternate */
	color: rgba(255, 255, 255, 0.5) !important;
	color: var(--mdc-theme-text-disabled-on-dark, rgba(255, 255, 255, 0.5)) !important;
}

.mdc-theme--text-icon-on-dark
{
	/* @alternate */
	color: rgba(255, 255, 255, 0.5) !important;
	color: var(--mdc-theme-text-icon-on-dark, rgba(255, 255, 255, 0.5)) !important;
}

.mdc-theme--primary-bg
{
	/* @alternate */
	background-color: #212121 !important;
	background-color: var(--mdc-theme-primary, #212121) !important;
}

.mdc-theme--primary-light-bg
{
	/* @alternate */
	background-color: #686868 !important;
	background-color: var(--mdc-theme-primary-light, #686868) !important;
}

.mdc-theme--primary-dark-bg
{
	/* @alternate */
	background-color: #454545 !important;
	background-color: var(--mdc-theme-primary-dark, #454545) !important;
}

.mdc-theme--secondary-bg
{
	/* @alternate */
	background-color: #64dd17 !important;
	background-color: var(--mdc-theme-secondary, #64dd17) !important;
}

.mdc-theme--secondary-light-bg
{
	/* @alternate */
	background-color: #8ced4f !important;
	background-color: var(--mdc-theme-secondary-light, #8ced4f) !important;
}

.mdc-theme--secondary-dark-bg
{
	/* @alternate */
	background-color: #479c10 !important;
	background-color: var(--mdc-theme-secondary-dark, #479c10) !important;
}

/**
 * The css property used for elevation. In most cases this should not be changed. It is exposed
 * as a variable for abstraction / easy use when needing to reference the property directly, for
 * example in a `will-change` rule.
 */
/**
 * The default duration value for elevation transitions.
 */
/**
 * The default easing value for elevation transitions.
 */
/**
 * Applies the correct css rules to an element to give it the elevation specified by $z-value.
 * The $z-value must be between 0 and 24.
 */
/**
 * Returns a string that can be used as the value for a `transition` property for elevation.
 * Calling this function directly is useful in situations where a component needs to transition
 * more than one property.
 *
 * ```scss
 * .foo {
 *   transition: mdc-elevation-transition-rule(), opacity 100ms ease;
 *   will-change: $mdc-elevation-property, opacity;
 * }
 * ```
 */
/**
 * Applies the correct css rules needed to have an element transition between elevations.
 * This mixin should be applied to elements whose elevation values will change depending on their
 * context (e.g. when active or disabled).
 */
/**
 * Creates a rule that will be applied when an MDC-Web component is within the context of an RTL layout.
 *
 * Usage Example:
 * ```scss
 * .mdc-foo {
 *   position: absolute;
 *   left: 0;
 *
 *   @include mdc-rtl {
 *     left: auto;
 *     right: 0;
 *   }
 *
 *   &__bar {
 *     margin-left: 4px;
 *     @include mdc-rtl(".mdc-foo") {
 *       margin-left: auto;
 *       margin-right: 4px;
 *     }
 *   }
 * }
 *
 * .mdc-foo--mod {
 *   padding-left: 4px;
 *
 *   @include mdc-rtl {
 *     padding-left: auto;
 *     padding-right: 4px;
 *   }
 * }
 * ```
 *
 * Note that this works by checking for [dir="rtl"] on an ancestor element. While this will work
 * in most cases, it will in some cases lead to false negatives, e.g.
 *
 * ```html
 * <html dir="rtl">
 *   <!-- ... -->
 *   <div dir="ltr">
 *     <div class="mdc-foo">Styled incorrectly as RTL!</div>
 *   </div>
 * </html>
 * ```
 *
 * In the future, selectors such as :dir (http://mdn.io/:dir) will help us mitigate this.
 */
/**
 * Takes a base box-model property - e.g. margin / border / padding - along with a default
 * direction and value, and emits rules which apply the value to the
 * "<base-property>-<default-direction>" property by default, but flips the direction
 * when within an RTL context.
 *
 * For example:
 *
 * ```scss
 * .mdc-foo {
 *   @include mdc-rtl-reflexive-box(margin, left, 8px);
 * }
 * ```
 * is equivalent to:
 *
 * ```scss
 * .mdc-foo {
 *   margin-left: 8px;
 *
 *   @include mdc-rtl {
 *     margin-right: 8px;
 *     margin-left: 0;
 *   }
 * }
 * ```
 * whereas:
 *
 * ```scss
 * .mdc-foo {
 *   @include mdc-rtl-reflexive-box(margin, right, 8px);
 * }
 * ```
 * is equivalent to:
 *
 * ```scss
 * .mdc-foo {
 *   margin-right: 8px;
 *
 *   @include mdc-rtl {
 *     margin-right: 0;
 *     margin-left: 8px;
 *   }
 * }
 * ```
 *
 * You can also pass a 4th optional $root-selector argument which will be forwarded to `mdc-rtl`,
 * e.g. `@include mdc-rtl-reflexive-box(margin, left, 8px, ".mdc-component")`.
 *
 * Note that this function will always zero out the original value in an RTL context. If you're
 * trying to flip the values, use mdc-rtl-reflexive-property().
 */
/**
 * Takes a base property and emits rules that assign <base-property>-left to <left-value> and
 * <base-property>-right to <right-value> in a LTR context, and vice versa in a RTL context.
 * For example:
 *
 * ```scss
 * .mdc-foo {
 *   @include mdc-rtl-reflexive-property(margin, auto, 12px);
 * }
 * ```
 * is equivalent to:
 *
 * ```scss
 * .mdc-foo {
 *   margin-left: auto;
 *   margin-right: 12px;
 *
 *   @include mdc-rtl {
 *     margin-left: 12px;
 *     margin-right: auto;
 *   }
 * }
 * ```
 *
 * A 4th optional $root-selector argument can be given, which will be passed to `mdc-rtl`.
 */
/**
 * Takes an argument specifying a horizontal position property (either "left" or "right") as well
 * as a value, and applies that value to the specified position in a LTR context, and flips it in a
 * RTL context. For example:
 *
 * ```scss
 * .mdc-foo {
 *   @include mdc-rtl-reflexive-position(left, 0);
 *   position: absolute;
 * }
 * ```
 * is equivalent to:
 *
 * ```scss
 *  .mdc-foo {
 *    position: absolute;
 *    left: 0;
 *    right: initial;
 *
 *    @include mdc-rtl {
 *      right: 0;
 *      left: initial;
 *    }
 *  }
 * ```
 * An optional third $root-selector argument may also be given, which is passed to `mdc-rtl`.
 */
/* TODO(sgomes): Figure out what to do about desktop font sizes. */
/* TODO(sgomes): Figure out what to do about i18n and i18n font sizes. */
/**
 * Applies styles to the different types of icons that can exist in toolbars.
 * Both .mdc-toolbar__icon and .mdc-toolbar__menu-icon share all styles except for
 * horizontal padding.
 */
.mdc-toolbar
{
	/* @alternate */
	background-color: #212121;
	background-color: var(--mdc-theme-primary, #212121);
	/* @alternate */
	color: white;
	color: var(--mdc-theme-text-primary-on-primary, white);
	display: flex;
	position: relative;
	flex-direction: column;
	justify-content: space-between;
	box-sizing: border-box;
	width: 100%;
}

.mdc-toolbar__row
{
	display: flex;
	position: relative;
	align-items: center;
	box-sizing: border-box;
	width: 100%;
	height: auto;
	min-height: 64px;
}

@media (max-width: 959px) and (orientation: landscape)
{
	.mdc-toolbar__row
	{
		min-height: 48px;
	}
}

@media (max-width: 599px)
{
	.mdc-toolbar__row
	{
		min-height: 56px;
	}
}

.mdc-toolbar__section
{
	display: inline-flex;
	flex: 1;
	align-items: flex-start;
	justify-content: center;
	min-width: 0;
	height: 100%;
	z-index: 1;
}

.mdc-toolbar__section--align-start
{
	justify-content: flex-start;
	order: -1;
}

.mdc-toolbar__section--align-end
{
	justify-content: flex-end;
	order: 1;
}

.mdc-toolbar__title
{
	font-family: Roboto, sans-serif;
	-moz-osx-font-smoothing: grayscale;
	-webkit-font-smoothing: antialiased;
	font-size: 1.25rem;
	font-weight: 500;
	letter-spacing: 0.02em;
	line-height: 2rem;
	text-decoration: inherit;
	text-transform: inherit;
	text-overflow: ellipsis;
	white-space: nowrap;
	overflow: hidden;
	margin-left: 24px;
	margin-right: 0;
	align-self: center;
	padding: 16px 0;
	line-height: 1.5rem;
	z-index: 1;
}

[dir="rtl"] .mdc-toolbar__title, .mdc-toolbar__title[dir="rtl"]
{
	margin-left: 0;
	margin-right: 24px;
}

.mdc-toolbar__icon
{
	display: flex;
	align-items: center;
	justify-content: center;
	padding: 16px;
	border: none;
	background-color: inherit;
	color: inherit;
	text-decoration: none;
	/* @alternate */
	color: white;
	color: var(--mdc-theme-text-primary-on-primary, white);
	padding-right: 12px;
	padding-left: 12px;
	cursor: pointer;
}

.mdc-toolbar__icon:last-of-type
{
	padding-left: 12px;
	padding-right: 24px;
}

[dir="rtl"] .mdc-toolbar__icon:last-of-type, .mdc-toolbar__icon:last-of-type[dir="rtl"]
{
	padding-left: 24px;
	padding-right: 12px;
}

.mdc-toolbar__menu-icon
{
	display: flex;
	align-items: center;
	justify-content: center;
	padding: 16px;
	border: none;
	background-color: inherit;
	color: inherit;
	text-decoration: none;
	/* @alternate */
	color: white;
	color: var(--mdc-theme-text-primary-on-primary, white);
	padding-right: 24px;
	padding-left: 24px;
	cursor: pointer;
}

.mdc-toolbar__menu-icon + .mdc-toolbar__title
{
	margin-left: 8px;
	margin-right: 0;
}

[dir="rtl"] .mdc-toolbar__menu-icon + .mdc-toolbar__title, .mdc-toolbar__menu-icon + .mdc-toolbar__title[dir="rtl"]
{
	margin-left: 0;
	margin-right: 8px;
}

@media (max-width: 599px)
{
	.mdc-toolbar__title
	{
		margin-left: 16px;
		margin-right: 0;
	}

	[dir="rtl"] .mdc-toolbar__title, .mdc-toolbar__title[dir="rtl"]
	{
		margin-left: 0;
		margin-right: 16px;
	}

	.mdc-toolbar__icon
	{
		padding-right: 8px;
		padding-left: 8px;
	}

	.mdc-toolbar__icon:last-of-type
	{
		padding-left: 8px;
		padding-right: 16px;
	}

	[dir="rtl"] .mdc-toolbar__icon:last-of-type, .mdc-toolbar__icon:last-of-type[dir="rtl"]
	{
		padding-left: 16px;
		padding-right: 8px;
	}

	.mdc-toolbar__menu-icon
	{
		padding-right: 16px;
		padding-left: 16px;
	}

	.mdc-toolbar__menu-icon + .mdc-toolbar__title
	{
		margin-left: 16px;
		margin-right: 0;
	}

	[dir="rtl"] .mdc-toolbar__menu-icon + .mdc-toolbar__title, .mdc-toolbar__menu-icon + .mdc-toolbar__title[dir="rtl"]
	{
		margin-left: 0;
		margin-right: 16px;
	}
}

.mdc-toolbar--fixed
{
	box-shadow: 0px 2px 4px -1px rgba(0, 0, 0, 0.2), 0px 4px 5px 0px rgba(0, 0, 0, 0.14), 0px 1px 10px 0px rgba(0, 0, 0, 0.12);
	position: fixed;
	top: 0;
	left: 0;
	z-index: 4;
}

.mdc-toolbar--flexible
{
	--mdc-toolbar-ratio-to-extend-flexible: 4;
}

.mdc-toolbar--flexible .mdc-toolbar__row:first-child
{
	height: 256px;
	height: calc(64px * var(--mdc-toolbar-ratio-to-extend-flexible, 4));
}

@media (max-width: 599px)
{
	.mdc-toolbar--flexible .mdc-toolbar__row:first-child
	{
		height: 224px;
		height: calc(56px * var(--mdc-toolbar-ratio-to-extend-flexible, 4));
	}
}

.mdc-toolbar--flexible .mdc-toolbar__row:first-child::after
{
	position: absolute;
	content: "";
}

.mdc-toolbar--flexible-default-behavior .mdc-toolbar__title
{
	font-family: Roboto, sans-serif;
	-moz-osx-font-smoothing: grayscale;
	-webkit-font-smoothing: antialiased;
	font-size: 2.125rem;
	font-weight: 400;
	letter-spacing: normal;
	line-height: 2.5rem;
	text-decoration: inherit;
	text-transform: inherit;
	align-self: flex-end;
	line-height: 1.5rem;
}

.mdc-toolbar--flexible-default-behavior .mdc-toolbar__row:first-child::after
{
	top: 0;
	left: 0;
	width: 100%;
	height: 100%;
	transition: opacity .2s ease;
	opacity: 1;
}

.mdc-toolbar--flexible-default-behavior.mdc-toolbar--flexible-space-minimized .mdc-toolbar__row:first-child::after
{
	opacity: 0;
}

.mdc-toolbar--flexible-default-behavior.mdc-toolbar--flexible-space-minimized .mdc-toolbar__title
{
	font-weight: 500;
}

.mdc-toolbar--waterfall.mdc-toolbar--fixed
{
	box-shadow: 0px 0px 0px 0px rgba(0, 0, 0, 0.2), 0px 0px 0px 0px rgba(0, 0, 0, 0.14), 0px 0px 0px 0px rgba(0, 0, 0, 0.12);
	transition: box-shadow 280ms cubic-bezier(0.4, 0, 0.2, 1);
	will-change: box-shadow;
}

.mdc-toolbar--waterfall.mdc-toolbar--fixed.mdc-toolbar--flexible-space-minimized
{
	box-shadow: 0px 2px 4px -1px rgba(0, 0, 0, 0.2), 0px 4px 5px 0px rgba(0, 0, 0, 0.14), 0px 1px 10px 0px rgba(0, 0, 0, 0.12);
}

.mdc-toolbar--waterfall.mdc-toolbar--fixed.mdc-toolbar--fixed-lastrow-only.mdc-toolbar--flexible-space-minimized
{
	box-shadow: 0px 0px 0px 0px rgba(0, 0, 0, 0.2), 0px 0px 0px 0px rgba(0, 0, 0, 0.14), 0px 0px 0px 0px rgba(0, 0, 0, 0.12);
}

.mdc-toolbar--waterfall.mdc-toolbar--fixed.mdc-toolbar--fixed-lastrow-only.mdc-toolbar--fixed-at-last-row
{
	box-shadow: 0px 2px 4px -1px rgba(0, 0, 0, 0.2), 0px 4px 5px 0px rgba(0, 0, 0, 0.14), 0px 1px 10px 0px rgba(0, 0, 0, 0.12);
}

.mdc-toolbar-fixed-adjust
{
	margin-top: 64px;
}

@media (max-width: 959px) and (orientation: landscape)
{
	.mdc-toolbar-fixed-adjust
	{
		margin-top: 48px;
	}
}

@media (max-width: 599px)
{
	.mdc-toolbar-fixed-adjust
	{
		margin-top: 56px;
	}
}

.mdc-toolbar__section--shrink-to-fit
{
	flex: none;
}

body
{
	font-family: Roboto, Helvetica, Arial, sans-serif;
}

fieldset
{
	margin: 0;
	padding: 0;
	border: 0;
}

.mdc-toolbar a
{
	color: #f0f0f0;
	text-decoration: none;
}

.mdc-button--theme-dark:not(:disabled),
.mdc-theme--dark .mdc-button:not(:disabled)
{
	color: #b2ff59;
}

.mdc-button--theme-dark::before, .mdc-button--theme-dark::after,
.mdc-theme--dark .mdc-button::before,
.mdc-theme--dark .mdc-button::after
{
	background-color: rgba(178, 255, 89, 0.16);
	opacity: 0;
}

.mdc-button--theme-dark:not(.mdc-ripple-upgraded):hover::before, .mdc-button--theme-dark:not(.mdc-ripple-upgraded):focus::before, .mdc-button--theme-dark:not(.mdc-ripple-upgraded):active::after,
.mdc-theme--dark .mdc-button:not(.mdc-ripple-upgraded):hover::before,
.mdc-theme--dark .mdc-button:not(.mdc-ripple-upgraded):focus::before,
.mdc-theme--dark .mdc-button:not(.mdc-ripple-upgraded):active::after
{
	transition-duration: 85ms;
	opacity: .6;
}

.mdc-button--theme-dark.mdc-ripple-upgraded--background-focused::before,
.mdc-theme--dark .mdc-button.mdc-ripple-upgraded--background-focused::before
{
	opacity: .99999;
}

.mdc-button--theme-dark.mdc-ripple-upgraded--background-active-fill::before,
.mdc-theme--dark .mdc-button.mdc-ripple-upgraded--background-active-fill::before
{
	transition-duration: 120ms;
	opacity: 1;
}

.mdc-button--theme-dark.mdc-ripple-upgraded::after,
.mdc-theme--dark .mdc-button.mdc-ripple-upgraded::after
{
	opacity: 0;
}

.mdc-button--theme-dark.mdc-ripple-upgraded--foreground-activation::after,
.mdc-theme--dark .mdc-button.mdc-ripple-upgraded--foreground-activation::after
{
	animation: 300ms mdc-ripple-fg-radius-in forwards, 83ms mdc-ripple-fg-opacity-in forwards;
}

.mdc-button--theme-dark.mdc-ripple-upgraded--foreground-deactivation::after,
.mdc-theme--dark .mdc-button.mdc-ripple-upgraded--foreground-deactivation::after
{
	animation: 83ms mdc-ripple-fg-opacity-out;
	transform: translate(var(--mdc-ripple-fg-translate-end, 0)) scale(var(--mdc-ripple-fg-scale, 1));
}

.mdc-button--theme-dark.mdc-button--raised:not(:disabled), .mdc-button--unelevated:not(:disabled),
.mdc-theme--dark .mdc-button--raised:not(:disabled),
.mdc-theme--dark .mdc-button--unelevated:not(:disabled)
{
	background-color: #b2ff59;
}

.mdc-button--theme-dark.mdc-button--raised:not(:disabled), .mdc-button--unelevated:not(:disabled),
.mdc-theme--dark .mdc-button--raised:not(:disabled),
.mdc-theme--dark .mdc-button--unelevated:not(:disabled)
{
	/* @alternate */
	color: rgba(0, 0, 0, 0.87);
	color: var(--mdc-theme-text-primary-on-light, rgba(0, 0, 0, 0.87));
}

.mdc-button--theme-dark.mdc-button--raised::before, .mdc-button--theme-dark.mdc-button--raised::after, .mdc-button--unelevated::before, .mdc-button--unelevated::after,
.mdc-theme--dark .mdc-button--raised::before,
.mdc-theme--dark .mdc-button--raised::after,
.mdc-theme--dark .mdc-button--unelevated::before,
.mdc-theme--dark .mdc-button--unelevated::after
{
	background-color: rgba(0, 0, 0, 0.32);
	opacity: 0;
}

@supports (background-color: color(green a(10%)))
{
	.mdc-button--theme-dark.mdc-button--raised::before, .mdc-button--theme-dark.mdc-button--raised::after, .mdc-button--unelevated::before, .mdc-button--unelevated::after, .mdc-theme--dark .mdc-button--raised::before, .mdc-theme--dark .mdc-button--raised::after, .mdc-theme--dark .mdc-button--unelevated::before, .mdc-theme--dark .mdc-button--unelevated::after
	{
		background-color: color(var(--mdc-theme-text-primary-on-light, rgba(0, 0, 0, 0.87)) a(32%));
	}
}

.mdc-button--theme-dark.mdc-button--raised:not(.mdc-ripple-upgraded):hover::before, .mdc-button--theme-dark.mdc-button--raised:not(.mdc-ripple-upgraded):focus::before, .mdc-button--theme-dark.mdc-button--raised:not(.mdc-ripple-upgraded):active::after, .mdc-button--unelevated:not(.mdc-ripple-upgraded):hover::before, .mdc-button--unelevated:not(.mdc-ripple-upgraded):focus::before, .mdc-button--unelevated:not(.mdc-ripple-upgraded):active::after,
.mdc-theme--dark .mdc-button--raised:not(.mdc-ripple-upgraded):hover::before,
.mdc-theme--dark .mdc-button--raised:not(.mdc-ripple-upgraded):focus::before,
.mdc-theme--dark .mdc-button--raised:not(.mdc-ripple-upgraded):active::after,
.mdc-theme--dark .mdc-button--unelevated:not(.mdc-ripple-upgraded):hover::before,
.mdc-theme--dark .mdc-button--unelevated:not(.mdc-ripple-upgraded):focus::before,
.mdc-theme--dark .mdc-button--unelevated:not(.mdc-ripple-upgraded):active::after
{
	transition-duration: 85ms;
	opacity: .6;
}

.mdc-button--theme-dark.mdc-button--raised.mdc-ripple-upgraded--background-focused::before, .mdc-button--unelevated.mdc-ripple-upgraded--background-focused::before,
.mdc-theme--dark .mdc-button--raised.mdc-ripple-upgraded--background-focused::before,
.mdc-theme--dark .mdc-button--unelevated.mdc-ripple-upgraded--background-focused::before
{
	opacity: .99999;
}

.mdc-button--theme-dark.mdc-button--raised.mdc-ripple-upgraded--background-active-fill::before, .mdc-button--unelevated.mdc-ripple-upgraded--background-active-fill::before,
.mdc-theme--dark .mdc-button--raised.mdc-ripple-upgraded--background-active-fill::before,
.mdc-theme--dark .mdc-button--unelevated.mdc-ripple-upgraded--background-active-fill::before
{
	transition-duration: 120ms;
	opacity: 1;
}

.mdc-button--theme-dark.mdc-button--raised.mdc-ripple-upgraded::after, .mdc-button--unelevated.mdc-ripple-upgraded::after,
.mdc-theme--dark .mdc-button--raised.mdc-ripple-upgraded::after,
.mdc-theme--dark .mdc-button--unelevated.mdc-ripple-upgraded::after
{
	opacity: 0;
}

.mdc-button--theme-dark.mdc-button--raised.mdc-ripple-upgraded--foreground-activation::after, .mdc-button--unelevated.mdc-ripple-upgraded--foreground-activation::after,
.mdc-theme--dark .mdc-button--raised.mdc-ripple-upgraded--foreground-activation::after,
.mdc-theme--dark .mdc-button--unelevated.mdc-ripple-upgraded--foreground-activation::after
{
	animation: 300ms mdc-ripple-fg-radius-in forwards, 83ms mdc-ripple-fg-opacity-in forwards;
}

.mdc-button--theme-dark.mdc-button--raised.mdc-ripple-upgraded--foreground-deactivation::after, .mdc-button--unelevated.mdc-ripple-upgraded--foreground-deactivation::after,
.mdc-theme--dark .mdc-button--raised.mdc-ripple-upgraded--foreground-deactivation::after,
.mdc-theme--dark .mdc-button--unelevated.mdc-ripple-upgraded--foreground-deactivation::after
{
	animation: 83ms mdc-ripple-fg-opacity-out;
	transform: translate(var(--mdc-ripple-fg-translate-end, 0)) scale(var(--mdc-ripple-fg-scale, 1));
}

.mdc-button--theme-dark.mdc-button--stroked:not(:disabled),
.mdc-theme--dark .mdc-button--stroked:not(:disabled)
{
	border-color: #b2ff59;
}

.catalog-title
{
	font-family: "Roboto Mono", monospace;
}

.catalog-logo,
.catalog-back
{
	padding-right: 24px;
	color: #eee;
	text-decoration: none;
}

.hero
{
	display: flex;
	flex-flow: row nowrap;
	align-items: center;
	justify-content: center;
	height: 360px;
	min-height: 360px;
	background-color: rgba(0, 0, 0, 0.05);
}

/* Default padding on all examples. */
section.example
{
	margin: 24px;
	padding: 24px;
}

section.example h2
{
	margin-left: 0;
}

/**
 * The css property used for elevation. In most cases this should not be changed. It is exposed
 * as a variable for abstraction / easy use when needing to reference the property directly, for
 * example in a `will-change` rule.
 */
/**
 * The default duration value for elevation transitions.
 */
/**
 * The default easing value for elevation transitions.
 */
/**
 * Applies the correct css rules to an element to give it the elevation specified by $z-value.
 * The $z-value must be between 0 and 24.
 */
/**
 * Returns a string that can be used as the value for a `transition` property for elevation.
 * Calling this function directly is useful in situations where a component needs to transition
 * more than one property.
 *
 * ```scss
 * .foo {
 *   transition: mdc-elevation-transition-rule(), opacity 100ms ease;
 *   will-change: $mdc-elevation-property, opacity;
 * }
 * ```
 */
/**
 * Applies the correct css rules needed to have an element transition between elevations.
 * This mixin should be applied to elements whose elevation values will change depending on their
 * context (e.g. when active or disabled).
 */
/* TODO(sgomes): Figure out what to do about desktop font sizes. */
/* TODO(sgomes): Figure out what to do about i18n and i18n font sizes. */
.mdc-button
{
	font-family: Roboto, sans-serif;
	-moz-osx-font-smoothing: grayscale;
	-webkit-font-smoothing: antialiased;
	font-size: 0.875rem;
	font-weight: 500;
	letter-spacing: 0.04em;
	line-height: 2.25rem;
	text-decoration: none;
	text-transform: uppercase;
	--mdc-ripple-fg-size: 0;
	--mdc-ripple-left: 0;
	--mdc-ripple-top: 0;
	--mdc-ripple-fg-scale: 1;
	--mdc-ripple-fg-translate-end: 0;
	--mdc-ripple-fg-translate-start: 0;
	will-change: transform, opacity;
	-webkit-tap-highlight-color: transparent;
	display: inline-block;
	position: relative;
	box-sizing: border-box;
	min-width: 64px;
	height: 36px;
	padding: 0 16px;
	border: none;
	outline: none;
	text-align: center;
	user-select: none;
	-webkit-appearance: none;
	-webkit-tap-highlight-color: transparent;
	overflow: hidden;
	vertical-align: middle;
	border-radius: 2px;
}

.mdc-button::before, .mdc-button::after
{
	position: absolute;
	transition: opacity 250ms linear;
	border-radius: 50%;
	pointer-events: none;
	content: "";
}

.mdc-button::before, .mdc-button::after
{
	top: calc(50% - 100%);
	left: calc(50% - 100%);
	width: 200%;
	height: 200%;
}

.mdc-button.mdc-ripple-upgraded::before
{
	top: calc(50% - 100%);
	left: calc(50% - 100%);
	width: 200%;
	height: 200%;
	transform: scale(var(--mdc-ripple-fg-scale, 0));
}

.mdc-button.mdc-ripple-upgraded--unbounded::before
{
	top: var(--mdc-ripple-top, calc(50% - 50%));
	left: var(--mdc-ripple-left, calc(50% - 50%));
	width: var(--mdc-ripple-fg-size, 100%);
	height: var(--mdc-ripple-fg-size, 100%);
	transform: scale(var(--mdc-ripple-fg-scale, 0));
}

.mdc-button.mdc-ripple-upgraded::after
{
	top: 0;
	left: 0;
	width: var(--mdc-ripple-fg-size, 100%);
	height: var(--mdc-ripple-fg-size, 100%);
	transform: scale(0);
	transform-origin: center center;
}

.mdc-button.mdc-ripple-upgraded--unbounded::after
{
	top: var(--mdc-ripple-top, 0);
	left: var(--mdc-ripple-left, 0);
}

.mdc-button:active
{
	outline: none;
}

.mdc-button:hover
{
	cursor: pointer;
}

.mdc-button::-moz-focus-inner
{
	padding: 0;
	border: 0;
}

.mdc-button:disabled
{
	background-color: transparent;
	/* @alternate */
	color: rgba(0, 0, 0, 0.38);
	color: var(--mdc-theme-text-disabled-on-light, rgba(0, 0, 0, 0.38));
	cursor: default;
	pointer-events: none;
}

.mdc-button--theme-dark .mdc-button:disabled,
.mdc-theme--dark .mdc-button:disabled
{
	/* @alternate */
	color: rgba(255, 255, 255, 0.5);
	color: var(--mdc-theme-text-disabled-on-dark, rgba(255, 255, 255, 0.5));
}

.mdc-button:not(:disabled)
{
	background-color: transparent;
}

.mdc-button:not(:disabled)
{
	/* @alternate */
	color: #212121;
	color: var(--mdc-theme-primary, #212121);
}

.mdc-button::before, .mdc-button::after
{
	background-color: rgba(33, 33, 33, 0.16);
	opacity: 0;
}

@supports (background-color: color(green a(10%)))
{
	.mdc-button::before, .mdc-button::after
	{
		background-color: color(var(--mdc-theme-primary, #212121) a(16%));
	}
}

.mdc-button:not(.mdc-ripple-upgraded):hover::before, .mdc-button:not(.mdc-ripple-upgraded):focus::before, .mdc-button:not(.mdc-ripple-upgraded):active::after
{
	transition-duration: 85ms;
	opacity: .6;
}

.mdc-button.mdc-ripple-upgraded--background-focused::before
{
	opacity: .99999;
}

.mdc-button.mdc-ripple-upgraded--background-active-fill::before
{
	transition-duration: 120ms;
	opacity: 1;
}

.mdc-button.mdc-ripple-upgraded::after
{
	opacity: 0;
}

.mdc-button.mdc-ripple-upgraded--foreground-activation::after
{
	animation: 300ms mdc-ripple-fg-radius-in forwards, 83ms mdc-ripple-fg-opacity-in forwards;
}

.mdc-button.mdc-ripple-upgraded--foreground-deactivation::after
{
	animation: 83ms mdc-ripple-fg-opacity-out;
	transform: translate(var(--mdc-ripple-fg-translate-end, 0)) scale(var(--mdc-ripple-fg-scale, 1));
}

.mdc-button--raised:disabled,
.mdc-button--unelevated:disabled
{
	background-color: rgba(0, 0, 0, 0.12);
	/* @alternate */
	color: rgba(0, 0, 0, 0.38);
	color: var(--mdc-theme-text-disabled-on-light, rgba(0, 0, 0, 0.38));
}

.mdc-button--theme-dark .mdc-button--raised:disabled,
.mdc-theme--dark .mdc-button--raised:disabled, .mdc-button--theme-dark .mdc-button--unelevated:disabled,
.mdc-theme--dark .mdc-button--unelevated:disabled
{
	background-color: rgba(255, 255, 255, 0.12);
	/* @alternate */
	color: rgba(0, 0, 0, 0.38);
	color: var(--mdc-theme-text-disabled-on-light, rgba(0, 0, 0, 0.38));
}

.mdc-button--raised:not(:disabled),
.mdc-button--unelevated:not(:disabled)
{
	/* @alternate */
	background-color: #212121;
}

@supports not (-ms-ime-align: auto)
{
	.mdc-button--raised:not(:disabled),
	.mdc-button--unelevated:not(:disabled)
	{
		background-color: var(--mdc-theme-primary, #212121);
	}
}

.mdc-button--raised:not(:disabled),
.mdc-button--unelevated:not(:disabled)
{
	/* @alternate */
	color: white;
	color: var(--mdc-theme-text-primary-on-primary, white);
}

.mdc-button--raised::before, .mdc-button--raised::after,
.mdc-button--unelevated::before,
.mdc-button--unelevated::after
{
	background-color: rgba(255, 255, 255, 0.32);
	opacity: 0;
}

@supports (background-color: color(green a(10%)))
{
	.mdc-button--raised::before, .mdc-button--raised::after,
	.mdc-button--unelevated::before,
	.mdc-button--unelevated::after
	{
		background-color: color(var(--mdc-theme-text-primary-on-primary, white) a(32%));
	}
}

.mdc-button--raised:not(.mdc-ripple-upgraded):hover::before, .mdc-button--raised:not(.mdc-ripple-upgraded):focus::before, .mdc-button--raised:not(.mdc-ripple-upgraded):active::after,
.mdc-button--unelevated:not(.mdc-ripple-upgraded):hover::before,
.mdc-button--unelevated:not(.mdc-ripple-upgraded):focus::before,
.mdc-button--unelevated:not(.mdc-ripple-upgraded):active::after
{
	transition-duration: 85ms;
	opacity: .6;
}

.mdc-button--raised.mdc-ripple-upgraded--background-focused::before,
.mdc-button--unelevated.mdc-ripple-upgraded--background-focused::before
{
	opacity: .99999;
}

.mdc-button--raised.mdc-ripple-upgraded--background-active-fill::before,
.mdc-button--unelevated.mdc-ripple-upgraded--background-active-fill::before
{
	transition-duration: 120ms;
	opacity: 1;
}

.mdc-button--raised.mdc-ripple-upgraded::after,
.mdc-button--unelevated.mdc-ripple-upgraded::after
{
	opacity: 0;
}

.mdc-button--raised.mdc-ripple-upgraded--foreground-activation::after,
.mdc-button--unelevated.mdc-ripple-upgraded--foreground-activation::after
{
	animation: 300ms mdc-ripple-fg-radius-in forwards, 83ms mdc-ripple-fg-opacity-in forwards;
}

.mdc-button--raised.mdc-ripple-upgraded--foreground-deactivation::after,
.mdc-button--unelevated.mdc-ripple-upgraded--foreground-deactivation::after
{
	animation: 83ms mdc-ripple-fg-opacity-out;
	transform: translate(var(--mdc-ripple-fg-translate-end, 0)) scale(var(--mdc-ripple-fg-scale, 1));
}

.mdc-button--raised
{
	box-shadow: 0px 3px 1px -2px rgba(0, 0, 0, 0.2), 0px 2px 2px 0px rgba(0, 0, 0, 0.14), 0px 1px 5px 0px rgba(0, 0, 0, 0.12);
	transition: box-shadow 280ms cubic-bezier(0.4, 0, 0.2, 1);
	will-change: box-shadow;
}

.mdc-button--raised:hover, .mdc-button--raised:focus
{
	box-shadow: 0px 2px 4px -1px rgba(0, 0, 0, 0.2), 0px 4px 5px 0px rgba(0, 0, 0, 0.14), 0px 1px 10px 0px rgba(0, 0, 0, 0.12);
}

.mdc-button--raised:active
{
	box-shadow: 0px 5px 5px -3px rgba(0, 0, 0, 0.2), 0px 8px 10px 1px rgba(0, 0, 0, 0.14), 0px 3px 14px 2px rgba(0, 0, 0, 0.12);
}

.mdc-button--raised:disabled
{
	box-shadow: 0px 0px 0px 0px rgba(0, 0, 0, 0.2), 0px 0px 0px 0px rgba(0, 0, 0, 0.14), 0px 0px 0px 0px rgba(0, 0, 0, 0.12);
}

.mdc-button--stroked
{
	border-style: solid;
	border-width: 2px;
	line-height: 32px;
}

.mdc-button--stroked:disabled
{
	/* @alternate */
	border-color: rgba(0, 0, 0, 0.38);
	border-color: var(--mdc-theme-text-disabled-on-light, rgba(0, 0, 0, 0.38));
}

.mdc-button--theme-dark .mdc-button--stroked:disabled,
.mdc-theme--dark .mdc-button--stroked:disabled
{
	/* @alternate */
	border-color: rgba(255, 255, 255, 0.5);
	border-color: var(--mdc-theme-text-disabled-on-dark, rgba(255, 255, 255, 0.5));
}

.mdc-button--stroked.mdc-button--dense
{
	line-height: 27px;
}

.mdc-button--stroked:not(:disabled)
{
	/* @alternate */
	border-color: #212121;
	border-color: var(--mdc-theme-primary, #212121);
}

.mdc-button--compact
{
	padding: 0 8px;
}

.mdc-button--dense
{
	height: 32px;
	font-size: .8125rem;
	line-height: 32px;
}

.mdc-button__icon
{
	display: inline-block;
	width: 18px;
	height: 18px;
	margin-right: 8px;
	font-size: 18px;
	line-height: inherit;
	vertical-align: top;
}

/**
 * Creates a rule that will be applied when an MDC-Web component is within the context of an RTL layout.
 *
 * Usage Example:
 * ```scss
 * .mdc-foo {
 *   position: absolute;
 *   left: 0;
 *
 *   @include mdc-rtl {
 *     left: auto;
 *     right: 0;
 *   }
 *
 *   &__bar {
 *     margin-left: 4px;
 *     @include mdc-rtl(".mdc-foo") {
 *       margin-left: auto;
 *       margin-right: 4px;
 *     }
 *   }
 * }
 *
 * .mdc-foo--mod {
 *   padding-left: 4px;
 *
 *   @include mdc-rtl {
 *     padding-left: auto;
 *     padding-right: 4px;
 *   }
 * }
 * ```
 *
 * Note that this works by checking for [dir="rtl"] on an ancestor element. While this will work
 * in most cases, it will in some cases lead to false negatives, e.g.
 *
 * ```html
 * <html dir="rtl">
 *   <!-- ... -->
 *   <div dir="ltr">
 *     <div class="mdc-foo">Styled incorrectly as RTL!</div>
 *   </div>
 * </html>
 * ```
 *
 * In the future, selectors such as :dir (http://mdn.io/:dir) will help us mitigate this.
 */
/**
 * Takes a base box-model property - e.g. margin / border / padding - along with a default
 * direction and value, and emits rules which apply the value to the
 * "<base-property>-<default-direction>" property by default, but flips the direction
 * when within an RTL context.
 *
 * For example:
 *
 * ```scss
 * .mdc-foo {
 *   @include mdc-rtl-reflexive-box(margin, left, 8px);
 * }
 * ```
 * is equivalent to:
 *
 * ```scss
 * .mdc-foo {
 *   margin-left: 8px;
 *
 *   @include mdc-rtl {
 *     margin-right: 8px;
 *     margin-left: 0;
 *   }
 * }
 * ```
 * whereas:
 *
 * ```scss
 * .mdc-foo {
 *   @include mdc-rtl-reflexive-box(margin, right, 8px);
 * }
 * ```
 * is equivalent to:
 *
 * ```scss
 * .mdc-foo {
 *   margin-right: 8px;
 *
 *   @include mdc-rtl {
 *     margin-right: 0;
 *     margin-left: 8px;
 *   }
 * }
 * ```
 *
 * You can also pass a 4th optional $root-selector argument which will be forwarded to `mdc-rtl`,
 * e.g. `@include mdc-rtl-reflexive-box(margin, left, 8px, ".mdc-component")`.
 *
 * Note that this function will always zero out the original value in an RTL context. If you're
 * trying to flip the values, use mdc-rtl-reflexive-property().
 */
/**
 * Takes a base property and emits rules that assign <base-property>-left to <left-value> and
 * <base-property>-right to <right-value> in a LTR context, and vice versa in a RTL context.
 * For example:
 *
 * ```scss
 * .mdc-foo {
 *   @include mdc-rtl-reflexive-property(margin, auto, 12px);
 * }
 * ```
 * is equivalent to:
 *
 * ```scss
 * .mdc-foo {
 *   margin-left: auto;
 *   margin-right: 12px;
 *
 *   @include mdc-rtl {
 *     margin-left: 12px;
 *     margin-right: auto;
 *   }
 * }
 * ```
 *
 * A 4th optional $root-selector argument can be given, which will be passed to `mdc-rtl`.
 */
/**
 * Takes an argument specifying a horizontal position property (either "left" or "right") as well
 * as a value, and applies that value to the specified position in a LTR context, and flips it in a
 * RTL context. For example:
 *
 * ```scss
 * .mdc-foo {
 *   @include mdc-rtl-reflexive-position(left, 0);
 *   position: absolute;
 * }
 * ```
 * is equivalent to:
 *
 * ```scss
 *  .mdc-foo {
 *    position: absolute;
 *    left: 0;
 *    right: initial;
 *
 *    @include mdc-rtl {
 *      right: 0;
 *      left: initial;
 *    }
 *  }
 * ```
 * An optional third $root-selector argument may also be given, which is passed to `mdc-rtl`.
 */
@keyframes mdc-checkbox-unchecked-checked-checkmark-path
{
	0%, 50%
	{
		stroke-dashoffset: 29.78334;
	}

	50%
	{
		animation-timing-function: cubic-bezier(0, 0, 0.2, 1);
	}

	100%
	{
		stroke-dashoffset: 0;
	}
}

@keyframes mdc-checkbox-unchecked-indeterminate-mixedmark
{
	0%, 68.2%
	{
		transform: scaleX(0);
	}

	68.2%
	{
		animation-timing-function: cubic-bezier(0, 0, 0, 1);
	}

	100%
	{
		transform: scaleX(1);
	}
}

@keyframes mdc-checkbox-checked-unchecked-checkmark-path
{
	from
	{
		animation-timing-function: cubic-bezier(0.4, 0, 1, 1);
		opacity: 1;
		stroke-dashoffset: 0;
	}

	to
	{
		opacity: 0;
		stroke-dashoffset: -29.78334;
	}
}

@keyframes mdc-checkbox-checked-indeterminate-checkmark
{
	from
	{
		animation-timing-function: cubic-bezier(0, 0, 0.2, 1);
		transform: rotate(0deg);
		opacity: 1;
	}

	to
	{
		transform: rotate(45deg);
		opacity: 0;
	}
}

@keyframes mdc-checkbox-indeterminate-checked-checkmark
{
	from
	{
		animation-timing-function: cubic-bezier(0.14, 0, 0, 1);
		transform: rotate(45deg);
		opacity: 0;
	}

	to
	{
		transform: rotate(360deg);
		opacity: 1;
	}
}

@keyframes mdc-checkbox-checked-indeterminate-mixedmark
{
	from
	{
		animation-timing-function: mdc-animation-deceleration-curve-timing-function;
		transform: rotate(-45deg);
		opacity: 0;
	}

	to
	{
		transform: rotate(0deg);
		opacity: 1;
	}
}

@keyframes mdc-checkbox-indeterminate-checked-mixedmark
{
	from
	{
		animation-timing-function: cubic-bezier(0.14, 0, 0, 1);
		transform: rotate(0deg);
		opacity: 1;
	}

	to
	{
		transform: rotate(315deg);
		opacity: 0;
	}
}

@keyframes mdc-checkbox-indeterminate-unchecked-mixedmark
{
	0%
	{
		animation-timing-function: linear;
		transform: scaleX(1);
		opacity: 1;
	}

	32.8%, 100%
	{
		transform: scaleX(0);
		opacity: 0;
	}
}

.mdc-checkbox
{
	display: inline-block;
	position: relative;
	flex: 0 0 18px;
	box-sizing: content-box;
	width: 18px;
	height: 18px;
	padding: 11px;
	line-height: 0;
	white-space: nowrap;
	cursor: pointer;
	vertical-align: bottom;
	--mdc-ripple-fg-size: 0;
	--mdc-ripple-left: 0;
	--mdc-ripple-top: 0;
	--mdc-ripple-fg-scale: 1;
	--mdc-ripple-fg-translate-end: 0;
	--mdc-ripple-fg-translate-start: 0;
	will-change: transform, opacity;
	-webkit-tap-highlight-color: transparent;
}

.mdc-checkbox .mdc-checkbox__native-control:disabled:not(:checked):not(:indeterminate) ~ .mdc-checkbox__background
{
	border-color: rgba(0, 0, 0, 0.26);
}

.mdc-checkbox .mdc-checkbox__native-control:disabled:checked ~ .mdc-checkbox__background,
.mdc-checkbox .mdc-checkbox__native-control:disabled:indeterminate ~ .mdc-checkbox__background
{
	border-color: transparent;
	background-color: rgba(0, 0, 0, 0.26);
}

.mdc-checkbox--theme-dark .mdc-checkbox__native-control:disabled:not(:checked):not(:indeterminate) ~ .mdc-checkbox__background,
.mdc-theme--dark .mdc-checkbox .mdc-checkbox__native-control:disabled:not(:checked):not(:indeterminate) ~ .mdc-checkbox__background
{
	border-color: rgba(255, 255, 255, 0.3);
}

.mdc-checkbox--theme-dark .mdc-checkbox__native-control:disabled:checked ~ .mdc-checkbox__background,
.mdc-checkbox--theme-dark .mdc-checkbox__native-control:disabled:indeterminate ~ .mdc-checkbox__background,
.mdc-theme--dark .mdc-checkbox .mdc-checkbox__native-control:disabled:checked ~ .mdc-checkbox__background,
.mdc-theme--dark .mdc-checkbox .mdc-checkbox__native-control:disabled:indeterminate ~ .mdc-checkbox__background
{
	background-color: rgba(255, 255, 255, 0.3);
}

.mdc-checkbox .mdc-checkbox__checkmark__path
{
	stroke: white !important;
}

.mdc-checkbox .mdc-checkbox__mixedmark
{
	background-color: white;
}

.mdc-checkbox .mdc-checkbox__background::before
{
	/* @alternate */
	background-color: #64dd17;
}

@supports not (-ms-ime-align: auto)
{
	.mdc-checkbox .mdc-checkbox__background::before
	{
		background-color: var(--mdc-theme-secondary, #64dd17);
	}
}

.mdc-checkbox::before, .mdc-checkbox::after
{
	position: absolute;
	transition: opacity 250ms linear;
	border-radius: 50%;
	pointer-events: none;
	content: "";
}

.mdc-checkbox::before, .mdc-checkbox::after
{
	background-color: rgba(100, 221, 23, 0.14);
	opacity: 0;
}

@supports (background-color: color(green a(10%)))
{
	.mdc-checkbox::before, .mdc-checkbox::after
	{
		background-color: color(var(--mdc-theme-secondary, #64dd17) a(14%));
	}
}

.mdc-checkbox:not(.mdc-ripple-upgraded):hover::before, .mdc-checkbox:not(.mdc-ripple-upgraded):focus::before, .mdc-checkbox:not(.mdc-ripple-upgraded):active::after
{
	transition-duration: 85ms;
	opacity: .6;
}

.mdc-checkbox.mdc-ripple-upgraded--background-focused::before
{
	opacity: .99999;
}

.mdc-checkbox.mdc-ripple-upgraded--background-active-fill::before
{
	transition-duration: 120ms;
	opacity: 1;
}

.mdc-checkbox.mdc-ripple-upgraded::after
{
	opacity: 0;
}

.mdc-checkbox.mdc-ripple-upgraded--foreground-activation::after
{
	animation: 300ms mdc-ripple-fg-radius-in forwards, 83ms mdc-ripple-fg-opacity-in forwards;
}

.mdc-checkbox.mdc-ripple-upgraded--foreground-deactivation::after
{
	animation: 83ms mdc-ripple-fg-opacity-out;
	transform: translate(var(--mdc-ripple-fg-translate-end, 0)) scale(var(--mdc-ripple-fg-scale, 1));
}

.mdc-checkbox::before, .mdc-checkbox::after
{
	top: calc(50% - 50%);
	left: calc(50% - 50%);
	width: 100%;
	height: 100%;
}

.mdc-checkbox.mdc-ripple-upgraded::before
{
	top: calc(50% - 50%);
	left: calc(50% - 50%);
	width: 100%;
	height: 100%;
	transform: scale(var(--mdc-ripple-fg-scale, 0));
}

.mdc-checkbox.mdc-ripple-upgraded--unbounded::before
{
	top: var(--mdc-ripple-top, calc(50% - 25%));
	left: var(--mdc-ripple-left, calc(50% - 25%));
	width: var(--mdc-ripple-fg-size, 50%);
	height: var(--mdc-ripple-fg-size, 50%);
	transform: scale(var(--mdc-ripple-fg-scale, 0));
}

.mdc-checkbox.mdc-ripple-upgraded::after
{
	top: 0;
	left: 0;
	width: var(--mdc-ripple-fg-size, 50%);
	height: var(--mdc-ripple-fg-size, 50%);
	transform: scale(0);
	transform-origin: center center;
}

.mdc-checkbox.mdc-ripple-upgraded--unbounded::after
{
	top: var(--mdc-ripple-top, 0);
	left: var(--mdc-ripple-left, 0);
}

.mdc-checkbox .mdc-checkbox__native-control:enabled:not(:checked):not(:indeterminate) ~ .mdc-checkbox__background
{
	border-color: rgba(0, 0, 0, 0.54);
	background-color: transparent;
}

.mdc-checkbox .mdc-checkbox__native-control:enabled:checked ~ .mdc-checkbox__background,
.mdc-checkbox .mdc-checkbox__native-control:enabled:indeterminate ~ .mdc-checkbox__background
{
	/* @alternate */
	border-color: #64dd17;
	border-color: var(--mdc-theme-secondary, #64dd17);
	/* @alternate */
	background-color: #64dd17;
	background-color: var(--mdc-theme-secondary, #64dd17);
}

@keyframes mdc-checkbox-fade-in-background-0
{
	0%
	{
		border-color: rgba(0, 0, 0, 0.54);
		background-color: transparent;
	}

	50%
	{
		/* @alternate */
		border-color: #64dd17;
		border-color: var(--mdc-theme-secondary, #64dd17);
		/* @alternate */
		background-color: #64dd17;
		background-color: var(--mdc-theme-secondary, #64dd17);
	}
}

@keyframes mdc-checkbox-fade-out-background-0
{
	0%, 80%
	{
		/* @alternate */
		border-color: #64dd17;
		border-color: var(--mdc-theme-secondary, #64dd17);
		/* @alternate */
		background-color: #64dd17;
		background-color: var(--mdc-theme-secondary, #64dd17);
	}

	100%
	{
		border-color: rgba(0, 0, 0, 0.54);
		background-color: transparent;
	}
}

.mdc-checkbox.mdc-checkbox--anim-unchecked-checked .mdc-checkbox__native-control:enabled ~ .mdc-checkbox__background, .mdc-checkbox.mdc-checkbox--anim-unchecked-indeterminate .mdc-checkbox__native-control:enabled ~ .mdc-checkbox__background
{
	animation-name: mdc-checkbox-fade-in-background-0;
}

.mdc-checkbox.mdc-checkbox--anim-checked-unchecked .mdc-checkbox__native-control:enabled ~ .mdc-checkbox__background, .mdc-checkbox.mdc-checkbox--anim-indeterminate-unchecked .mdc-checkbox__native-control:enabled ~ .mdc-checkbox__background
{
	animation-name: mdc-checkbox-fade-out-background-0;
}

.mdc-checkbox--theme-dark .mdc-checkbox__native-control:enabled:not(:checked):not(:indeterminate) ~ .mdc-checkbox__background,
.mdc-theme--dark .mdc-checkbox .mdc-checkbox__native-control:enabled:not(:checked):not(:indeterminate) ~ .mdc-checkbox__background
{
	border-color: white;
	background-color: transparent;
}

.mdc-checkbox--theme-dark .mdc-checkbox__native-control:enabled:checked ~ .mdc-checkbox__background,
.mdc-checkbox--theme-dark .mdc-checkbox__native-control:enabled:indeterminate ~ .mdc-checkbox__background,
.mdc-theme--dark .mdc-checkbox .mdc-checkbox__native-control:enabled:checked ~ .mdc-checkbox__background,
.mdc-theme--dark .mdc-checkbox .mdc-checkbox__native-control:enabled:indeterminate ~ .mdc-checkbox__background
{
	/* @alternate */
	border-color: #64dd17;
	border-color: var(--mdc-theme-secondary, #64dd17);
	/* @alternate */
	background-color: #64dd17;
	background-color: var(--mdc-theme-secondary, #64dd17);
}

@keyframes mdc-checkbox-fade-in-background-1
{
	0%
	{
		border-color: white;
		background-color: transparent;
	}

	50%
	{
		/* @alternate */
		border-color: #64dd17;
		border-color: var(--mdc-theme-secondary, #64dd17);
		/* @alternate */
		background-color: #64dd17;
		background-color: var(--mdc-theme-secondary, #64dd17);
	}
}

@keyframes mdc-checkbox-fade-out-background-1
{
	0%, 80%
	{
		/* @alternate */
		border-color: #64dd17;
		border-color: var(--mdc-theme-secondary, #64dd17);
		/* @alternate */
		background-color: #64dd17;
		background-color: var(--mdc-theme-secondary, #64dd17);
	}

	100%
	{
		border-color: white;
		background-color: transparent;
	}
}

.mdc-checkbox--theme-dark.mdc-checkbox--anim-unchecked-checked .mdc-checkbox__native-control:enabled ~ .mdc-checkbox__background, .mdc-checkbox--theme-dark.mdc-checkbox--anim-unchecked-indeterminate .mdc-checkbox__native-control:enabled ~ .mdc-checkbox__background,
.mdc-theme--dark .mdc-checkbox.mdc-checkbox--anim-unchecked-checked .mdc-checkbox__native-control:enabled ~ .mdc-checkbox__background,
.mdc-theme--dark .mdc-checkbox.mdc-checkbox--anim-unchecked-indeterminate .mdc-checkbox__native-control:enabled ~ .mdc-checkbox__background
{
	animation-name: mdc-checkbox-fade-in-background-1;
}

.mdc-checkbox--theme-dark.mdc-checkbox--anim-checked-unchecked .mdc-checkbox__native-control:enabled ~ .mdc-checkbox__background, .mdc-checkbox--theme-dark.mdc-checkbox--anim-indeterminate-unchecked .mdc-checkbox__native-control:enabled ~ .mdc-checkbox__background,
.mdc-theme--dark .mdc-checkbox.mdc-checkbox--anim-checked-unchecked .mdc-checkbox__native-control:enabled ~ .mdc-checkbox__background,
.mdc-theme--dark .mdc-checkbox.mdc-checkbox--anim-indeterminate-unchecked .mdc-checkbox__native-control:enabled ~ .mdc-checkbox__background
{
	animation-name: mdc-checkbox-fade-out-background-1;
}

.mdc-checkbox--disabled
{
	cursor: default;
	pointer-events: none;
}

.mdc-checkbox--upgraded .mdc-checkbox__background,
.mdc-checkbox--upgraded .mdc-checkbox__checkmark,
.mdc-checkbox--upgraded .mdc-checkbox__checkmark__path,
.mdc-checkbox--upgraded .mdc-checkbox__mixedmark
{
	transition: none !important;
}

.mdc-checkbox--anim-unchecked-checked .mdc-checkbox__background, .mdc-checkbox--anim-unchecked-indeterminate .mdc-checkbox__background, .mdc-checkbox--anim-checked-unchecked .mdc-checkbox__background, .mdc-checkbox--anim-indeterminate-unchecked .mdc-checkbox__background
{
	animation-duration: 180ms;
	animation-timing-function: linear;
}

.mdc-checkbox--anim-unchecked-checked .mdc-checkbox__checkmark__path
{
	animation: 180ms linear 0s mdc-checkbox-unchecked-checked-checkmark-path;
	transition: none;
}

.mdc-checkbox--anim-unchecked-indeterminate .mdc-checkbox__mixedmark
{
	animation: 90ms linear 0s mdc-checkbox-unchecked-indeterminate-mixedmark;
	transition: none;
}

.mdc-checkbox--anim-checked-unchecked .mdc-checkbox__checkmark__path
{
	animation: 90ms linear 0s mdc-checkbox-checked-unchecked-checkmark-path;
	transition: none;
}

.mdc-checkbox--anim-checked-indeterminate .mdc-checkbox__checkmark
{
	animation: 90ms linear 0s mdc-checkbox-checked-indeterminate-checkmark;
	transition: none;
}

.mdc-checkbox--anim-checked-indeterminate .mdc-checkbox__mixedmark
{
	animation: 90ms linear 0s mdc-checkbox-checked-indeterminate-mixedmark;
	transition: none;
}

.mdc-checkbox--anim-indeterminate-checked .mdc-checkbox__checkmark
{
	animation: 500ms linear 0s mdc-checkbox-indeterminate-checked-checkmark;
	transition: none;
}

.mdc-checkbox--anim-indeterminate-checked .mdc-checkbox__mixedmark
{
	animation: 500ms linear 0s mdc-checkbox-indeterminate-checked-mixedmark;
	transition: none;
}

.mdc-checkbox--anim-indeterminate-unchecked .mdc-checkbox__mixedmark
{
	animation: 300ms linear 0s mdc-checkbox-indeterminate-unchecked-mixedmark;
	transition: none;
}

.mdc-checkbox__background
{
	position: absolute;
	top: 0;
	right: 0;
	bottom: 0;
	left: 0;
	left: 11px;
	right: initial;
	display: inline-flex;
	top: 11px;
	align-items: center;
	justify-content: center;
	box-sizing: border-box;
	width: 45%;
	height: 45%;
	transition: background-color 90ms 0ms cubic-bezier(0.4, 0, 0.6, 1), border-color 90ms 0ms cubic-bezier(0.4, 0, 0.6, 1);
	border: 2px solid currentColor;
	border-radius: 2px;
	background-color: transparent;
	pointer-events: none;
	will-change: background-color, border-color;
}

[dir="rtl"] .mdc-checkbox .mdc-checkbox__background,
.mdc-checkbox[dir="rtl"] .mdc-checkbox__background
{
	left: initial;
	right: 11px;
}

.mdc-checkbox__native-control:enabled:checked ~ .mdc-checkbox__background,
.mdc-checkbox__native-control:enabled:indeterminate ~ .mdc-checkbox__background
{
	transition: border-color 90ms 0ms cubic-bezier(0, 0, 0.2, 1), background-color 90ms 0ms cubic-bezier(0, 0, 0.2, 1);
}

.mdc-checkbox__background::before
{
	position: absolute;
	top: 0;
	right: 0;
	bottom: 0;
	left: 0;
	width: 100%;
	height: 100%;
	transform: scale(0, 0);
	transition: opacity 90ms 0ms cubic-bezier(0.4, 0, 0.6, 1), transform 90ms 0ms cubic-bezier(0.4, 0, 0.6, 1);
	border-radius: 50%;
	opacity: 0;
	pointer-events: none;
	content: "";
	will-change: opacity, transform;
}

.mdc-checkbox__native-control:focus ~ .mdc-checkbox__background::before
{
	transform: scale(2.75, 2.75);
	transition: opacity 80ms 0ms cubic-bezier(0, 0, 0.2, 1), transform 80ms 0ms cubic-bezier(0, 0, 0.2, 1);
	opacity: 0.26;
}

.mdc-ripple-upgraded--unbounded .mdc-checkbox__background::before
{
	content: none;
}

.mdc-checkbox__native-control
{
	position: absolute;
	top: 0;
	left: 0;
	width: 100%;
	height: 100%;
	margin: 0;
	padding: 0;
	opacity: 0;
	cursor: inherit;
}

.mdc-checkbox__native-control:disabled
{
	cursor: default;
	pointer-events: none;
}

.mdc-checkbox__checkmark
{
	position: absolute;
	top: 0;
	right: 0;
	bottom: 0;
	left: 0;
	width: 100%;
	transition: opacity 180ms 0ms cubic-bezier(0.4, 0, 0.6, 1);
	opacity: 0;
}

.mdc-checkbox--upgraded .mdc-checkbox__checkmark
{
	opacity: 1;
}

.mdc-checkbox__native-control:checked ~ .mdc-checkbox__background .mdc-checkbox__checkmark
{
	transition: opacity 180ms 0ms cubic-bezier(0, 0, 0.2, 1), transform 180ms 0ms cubic-bezier(0, 0, 0.2, 1);
	opacity: 1;
}

.mdc-checkbox__native-control:indeterminate ~ .mdc-checkbox__background .mdc-checkbox__checkmark
{
	transform: rotate(45deg);
	transition: opacity 90ms 0ms cubic-bezier(0.4, 0, 0.6, 1), transform 90ms 0ms cubic-bezier(0.4, 0, 0.6, 1);
	opacity: 0;
}

.mdc-checkbox__checkmark__path
{
	transition: stroke-dashoffset 180ms 0ms cubic-bezier(0.4, 0, 0.6, 1);
	stroke-width: 3.12px;
	stroke-dashoffset: 29.78334;
	stroke-dasharray: 29.78334;
}

.mdc-checkbox__native-control:checked ~ .mdc-checkbox__background .mdc-checkbox__checkmark__path,
.mdc-checkbox__native-control:indeterminate ~ .mdc-checkbox__background .mdc-checkbox__checkmark__path
{
	stroke-dashoffset: 0;
}

.mdc-checkbox__mixedmark
{
	width: 100%;
	height: 2px;
	transform: scaleX(0) rotate(0deg);
	transition: opacity 90ms 0ms cubic-bezier(0.4, 0, 0.6, 1), transform 90ms 0ms cubic-bezier(0.4, 0, 0.6, 1);
	opacity: 0;
}

.mdc-checkbox__native-control:checked ~ .mdc-checkbox__background .mdc-checkbox__mixedmark
{
	transform: scaleX(1) rotate(-45deg);
}

.mdc-checkbox__native-control:indeterminate ~ .mdc-checkbox__background .mdc-checkbox__mixedmark
{
	transform: scaleX(1) rotate(0deg);
	opacity: 1;
}

/**
 * Creates a rule that will be applied when an MDC-Web component is within the context of an RTL layout.
 *
 * Usage Example:
 * ```scss
 * .mdc-foo {
 *   position: absolute;
 *   left: 0;
 *
 *   @include mdc-rtl {
 *     left: auto;
 *     right: 0;
 *   }
 *
 *   &__bar {
 *     margin-left: 4px;
 *     @include mdc-rtl(".mdc-foo") {
 *       margin-left: auto;
 *       margin-right: 4px;
 *     }
 *   }
 * }
 *
 * .mdc-foo--mod {
 *   padding-left: 4px;
 *
 *   @include mdc-rtl {
 *     padding-left: auto;
 *     padding-right: 4px;
 *   }
 * }
 * ```
 *
 * Note that this works by checking for [dir="rtl"] on an ancestor element. While this will work
 * in most cases, it will in some cases lead to false negatives, e.g.
 *
 * ```html
 * <html dir="rtl">
 *   <!-- ... -->
 *   <div dir="ltr">
 *     <div class="mdc-foo">Styled incorrectly as RTL!</div>
 *   </div>
 * </html>
 * ```
 *
 * In the future, selectors such as :dir (http://mdn.io/:dir) will help us mitigate this.
 */
/**
 * Takes a base box-model property - e.g. margin / border / padding - along with a default
 * direction and value, and emits rules which apply the value to the
 * "<base-property>-<default-direction>" property by default, but flips the direction
 * when within an RTL context.
 *
 * For example:
 *
 * ```scss
 * .mdc-foo {
 *   @include mdc-rtl-reflexive-box(margin, left, 8px);
 * }
 * ```
 * is equivalent to:
 *
 * ```scss
 * .mdc-foo {
 *   margin-left: 8px;
 *
 *   @include mdc-rtl {
 *     margin-right: 8px;
 *     margin-left: 0;
 *   }
 * }
 * ```
 * whereas:
 *
 * ```scss
 * .mdc-foo {
 *   @include mdc-rtl-reflexive-box(margin, right, 8px);
 * }
 * ```
 * is equivalent to:
 *
 * ```scss
 * .mdc-foo {
 *   margin-right: 8px;
 *
 *   @include mdc-rtl {
 *     margin-right: 0;
 *     margin-left: 8px;
 *   }
 * }
 * ```
 *
 * You can also pass a 4th optional $root-selector argument which will be forwarded to `mdc-rtl`,
 * e.g. `@include mdc-rtl-reflexive-box(margin, left, 8px, ".mdc-component")`.
 *
 * Note that this function will always zero out the original value in an RTL context. If you're
 * trying to flip the values, use mdc-rtl-reflexive-property().
 */
/**
 * Takes a base property and emits rules that assign <base-property>-left to <left-value> and
 * <base-property>-right to <right-value> in a LTR context, and vice versa in a RTL context.
 * For example:
 *
 * ```scss
 * .mdc-foo {
 *   @include mdc-rtl-reflexive-property(margin, auto, 12px);
 * }
 * ```
 * is equivalent to:
 *
 * ```scss
 * .mdc-foo {
 *   margin-left: auto;
 *   margin-right: 12px;
 *
 *   @include mdc-rtl {
 *     margin-left: 12px;
 *     margin-right: auto;
 *   }
 * }
 * ```
 *
 * A 4th optional $root-selector argument can be given, which will be passed to `mdc-rtl`.
 */
/**
 * Takes an argument specifying a horizontal position property (either "left" or "right") as well
 * as a value, and applies that value to the specified position in a LTR context, and flips it in a
 * RTL context. For example:
 *
 * ```scss
 * .mdc-foo {
 *   @include mdc-rtl-reflexive-position(left, 0);
 *   position: absolute;
 * }
 * ```
 * is equivalent to:
 *
 * ```scss
 *  .mdc-foo {
 *    position: absolute;
 *    left: 0;
 *    right: initial;
 *
 *    @include mdc-rtl {
 *      right: 0;
 *      left: initial;
 *    }
 *  }
 * ```
 * An optional third $root-selector argument may also be given, which is passed to `mdc-rtl`.
 */
/* TODO(sgomes): Figure out what to do about desktop font sizes. */
/* TODO(sgomes): Figure out what to do about i18n and i18n font sizes. */
/* stylelint-disable selector-max-type */
.mdc-form-field
{
	font-family: Roboto, sans-serif;
	-moz-osx-font-smoothing: grayscale;
	-webkit-font-smoothing: antialiased;
	font-size: 0.875rem;
	font-weight: 400;
	letter-spacing: 0.04em;
	line-height: 1.25rem;
	text-decoration: inherit;
	text-transform: inherit;
	/* @alternate */
	color: rgba(0, 0, 0, 0.87);
	color: var(--mdc-theme-text-primary-on-light, rgba(0, 0, 0, 0.87));
	display: inline-flex;
	align-items: center;
	vertical-align: middle;
}

.mdc-form-field--theme-dark,
.mdc-theme--dark .mdc-form-field
{
	/* @alternate */
	color: white;
	color: var(--mdc-theme-text-primary-on-dark, white);
}

.mdc-form-field > label
{
	order: 0;
	margin-right: auto;
	padding-left: 4px;
}

[dir="rtl"] .mdc-form-field > label, .mdc-form-field[dir="rtl"] > label
{
	margin-left: auto;
	padding-right: 4px;
}

.mdc-form-field--align-end > label
{
	order: -1;
	margin-left: auto;
	padding-right: 4px;
}

[dir="rtl"] .mdc-form-field--align-end > label, .mdc-form-field--align-end[dir="rtl"] > label
{
	margin-right: auto;
	padding-left: 4px;
}

/* stylelint-enable selector-max-type */
/* TODO(sgomes): Figure out what to do about desktop font sizes. */
/* TODO(sgomes): Figure out what to do about i18n and i18n font sizes. */
/* TODO(sgomes): Figure out what to do about desktop font sizes. */
/* TODO(sgomes): Figure out what to do about i18n and i18n font sizes. */
.mdc-typography
{
	font-family: Roboto, sans-serif;
	-moz-osx-font-smoothing: grayscale;
	-webkit-font-smoothing: antialiased;
}

.mdc-typography--display4
{
	font-family: Roboto, sans-serif;
	-moz-osx-font-smoothing: grayscale;
	-webkit-font-smoothing: antialiased;
	font-size: 7rem;
	font-weight: 300;
	letter-spacing: -0.04em;
	line-height: 7rem;
	text-decoration: inherit;
	text-transform: inherit;
}

.mdc-typography--adjust-margin.mdc-typography--display4
{
	margin: -1rem 0 3.5rem -0.085em;
}

.mdc-typography--display3
{
	font-family: Roboto, sans-serif;
	-moz-osx-font-smoothing: grayscale;
	-webkit-font-smoothing: antialiased;
	font-size: 3.5rem;
	font-weight: 400;
	letter-spacing: -0.02em;
	line-height: 3.5rem;
	text-decoration: inherit;
	text-transform: inherit;
}

.mdc-typography--adjust-margin.mdc-typography--display3
{
	margin: -8px 0 64px -0.07em;
}

.mdc-typography--display2
{
	font-family: Roboto, sans-serif;
	-moz-osx-font-smoothing: grayscale;
	-webkit-font-smoothing: antialiased;
	font-size: 2.813rem;
	font-weight: 400;
	letter-spacing: normal;
	line-height: 3rem;
	text-decoration: inherit;
	text-transform: inherit;
}

.mdc-typography--adjust-margin.mdc-typography--display2
{
	margin: -0.5rem 0 4rem -0.07em;
}

.mdc-typography--display1
{
	font-family: Roboto, sans-serif;
	-moz-osx-font-smoothing: grayscale;
	-webkit-font-smoothing: antialiased;
	font-size: 2.125rem;
	font-weight: 400;
	letter-spacing: normal;
	line-height: 2.5rem;
	text-decoration: inherit;
	text-transform: inherit;
}

.mdc-typography--adjust-margin.mdc-typography--display1
{
	margin: -0.5rem 0 4rem -0.07em;
}

.mdc-typography--headline
{
	font-family: Roboto, sans-serif;
	-moz-osx-font-smoothing: grayscale;
	-webkit-font-smoothing: antialiased;
	font-size: 1.5rem;
	font-weight: 400;
	letter-spacing: normal;
	line-height: 2rem;
	text-decoration: inherit;
	text-transform: inherit;
}

.mdc-typography--adjust-margin.mdc-typography--headline
{
	margin: -0.5rem 0 1rem -0.06em;
}

.mdc-typography--title
{
	font-family: Roboto, sans-serif;
	-moz-osx-font-smoothing: grayscale;
	-webkit-font-smoothing: antialiased;
	font-size: 1.25rem;
	font-weight: 500;
	letter-spacing: 0.02em;
	line-height: 2rem;
	text-decoration: inherit;
	text-transform: inherit;
}

.mdc-typography--adjust-margin.mdc-typography--title
{
	margin: -0.5rem 0 1rem -0.05em;
}

.mdc-typography--subheading2
{
	font-family: Roboto, sans-serif;
	-moz-osx-font-smoothing: grayscale;
	-webkit-font-smoothing: antialiased;
	font-size: 1rem;
	font-weight: 400;
	letter-spacing: 0.04em;
	line-height: 1.75rem;
	text-decoration: inherit;
	text-transform: inherit;
}

.mdc-typography--adjust-margin.mdc-typography--subheading2
{
	margin: -0.5rem 0 1rem -0.06em;
}

.mdc-typography--subheading1
{
	font-family: Roboto, sans-serif;
	-moz-osx-font-smoothing: grayscale;
	-webkit-font-smoothing: antialiased;
	font-size: 0.938rem;
	font-weight: 400;
	letter-spacing: 0.04em;
	line-height: 1.5rem;
	text-decoration: inherit;
	text-transform: inherit;
}

.mdc-typography--adjust-margin.mdc-typography--subheading1
{
	margin: -0.313rem 0 0.813rem -0.06em;
}

.mdc-typography--body2
{
	font-family: Roboto, sans-serif;
	-moz-osx-font-smoothing: grayscale;
	-webkit-font-smoothing: antialiased;
	font-size: 0.875rem;
	font-weight: 500;
	letter-spacing: 0.04em;
	line-height: 1.5rem;
	text-decoration: inherit;
	text-transform: inherit;
}

.mdc-typography--adjust-margin.mdc-typography--body2
{
	margin: -0.25rem 0 0.75rem 0;
}

.mdc-typography--body1
{
	font-family: Roboto, sans-serif;
	-moz-osx-font-smoothing: grayscale;
	-webkit-font-smoothing: antialiased;
	font-size: 0.875rem;
	font-weight: 400;
	letter-spacing: 0.04em;
	line-height: 1.25rem;
	text-decoration: inherit;
	text-transform: inherit;
}

.mdc-typography--adjust-margin.mdc-typography--body1
{
	margin: -0.25rem 0 0.75rem 0;
}

.mdc-typography--caption
{
	font-family: Roboto, sans-serif;
	-moz-osx-font-smoothing: grayscale;
	-webkit-font-smoothing: antialiased;
	font-size: 0.75rem;
	font-weight: 400;
	letter-spacing: 0.08em;
	line-height: 1.25rem;
	text-decoration: inherit;
	text-transform: inherit;
}

.mdc-typography--adjust-margin.mdc-typography--caption
{
	margin: -0.5rem 0 1rem -0.04em;
}

.mdc-typography--button
{
	font-family: Roboto, sans-serif;
	-moz-osx-font-smoothing: grayscale;
	-webkit-font-smoothing: antialiased;
	font-size: 0.875rem;
	font-weight: 500;
	letter-spacing: 0.04em;
	line-height: 2.25rem;
	text-decoration: none;
	text-transform: uppercase;
}

.mdc-typography--adjust-margin.mdc-typography--button
{
	margin: inherit;
}

.mdc-checkbox.demo-checkbox--custom-all .mdc-checkbox__background::before
{
	background-color: #f44336;
}

.mdc-checkbox.demo-checkbox--custom-all::before, .mdc-checkbox.demo-checkbox--custom-all::after
{
	background-color: rgba(244, 67, 54, 0.14);
	opacity: 0;
}

.mdc-checkbox.demo-checkbox--custom-all:not(.mdc-ripple-upgraded):hover::before, .mdc-checkbox.demo-checkbox--custom-all:not(.mdc-ripple-upgraded):focus::before, .mdc-checkbox.demo-checkbox--custom-all:not(.mdc-ripple-upgraded):active::after
{
	transition-duration: 85ms;
	opacity: .6;
}

.mdc-checkbox.demo-checkbox--custom-all.mdc-ripple-upgraded--background-focused::before
{
	opacity: .99999;
}

.mdc-checkbox.demo-checkbox--custom-all.mdc-ripple-upgraded--background-active-fill::before
{
	transition-duration: 120ms;
	opacity: 1;
}

.mdc-checkbox.demo-checkbox--custom-all.mdc-ripple-upgraded::after
{
	opacity: 0;
}

.mdc-checkbox.demo-checkbox--custom-all.mdc-ripple-upgraded--foreground-activation::after
{
	animation: 300ms mdc-ripple-fg-radius-in forwards, 83ms mdc-ripple-fg-opacity-in forwards;
}

.mdc-checkbox.demo-checkbox--custom-all.mdc-ripple-upgraded--foreground-deactivation::after
{
	animation: 83ms mdc-ripple-fg-opacity-out;
	transform: translate(var(--mdc-ripple-fg-translate-end, 0)) scale(var(--mdc-ripple-fg-scale, 1));
}

.mdc-checkbox.demo-checkbox--custom-all .mdc-checkbox__native-control:enabled:not(:checked):not(:indeterminate) ~ .mdc-checkbox__background
{
	border-color: #f44336;
	background-color: rgba(244, 67, 54, 0.25);
}

.mdc-checkbox.demo-checkbox--custom-all .mdc-checkbox__native-control:enabled:checked ~ .mdc-checkbox__background,
.mdc-checkbox.demo-checkbox--custom-all .mdc-checkbox__native-control:enabled:indeterminate ~ .mdc-checkbox__background
{
	border-color: #f44336;
	background-color: #f44336;
}

@keyframes mdc-checkbox-fade-in-background-2
{
	0%
	{
		border-color: #f44336;
		background-color: rgba(244, 67, 54, 0.25);
	}

	50%
	{
		border-color: #f44336;
		background-color: #f44336;
	}
}

@keyframes mdc-checkbox-fade-out-background-2
{
	0%, 80%
	{
		border-color: #f44336;
		background-color: #f44336;
	}

	100%
	{
		border-color: #f44336;
		background-color: rgba(244, 67, 54, 0.25);
	}
}

.mdc-checkbox.demo-checkbox--custom-all.mdc-checkbox--anim-unchecked-checked .mdc-checkbox__native-control:enabled ~ .mdc-checkbox__background, .mdc-checkbox.demo-checkbox--custom-all.mdc-checkbox--anim-unchecked-indeterminate .mdc-checkbox__native-control:enabled ~ .mdc-checkbox__background
{
	animation-name: mdc-checkbox-fade-in-background-2;
}

.mdc-checkbox.demo-checkbox--custom-all.mdc-checkbox--anim-checked-unchecked .mdc-checkbox__native-control:enabled ~ .mdc-checkbox__background, .mdc-checkbox.demo-checkbox--custom-all.mdc-checkbox--anim-indeterminate-unchecked .mdc-checkbox__native-control:enabled ~ .mdc-checkbox__background
{
	animation-name: mdc-checkbox-fade-out-background-2;
}

.mdc-checkbox--theme-dark.mdc-checkbox.demo-checkbox--custom-all .mdc-checkbox__checkmark__path,
.mdc-theme--dark .mdc-checkbox.demo-checkbox--custom-all .mdc-checkbox__checkmark__path
{
	stroke: black !important;
}

.mdc-checkbox--theme-dark.mdc-checkbox.demo-checkbox--custom-all .mdc-checkbox__mixedmark,
.mdc-theme--dark .mdc-checkbox.demo-checkbox--custom-all .mdc-checkbox__mixedmark
{
	background-color: black;
}

.mdc-checkbox--theme-dark.mdc-checkbox.demo-checkbox--custom-all .mdc-checkbox__native-control:enabled:not(:checked):not(:indeterminate) ~ .mdc-checkbox__background,
.mdc-theme--dark .mdc-checkbox.demo-checkbox--custom-all .mdc-checkbox__native-control:enabled:not(:checked):not(:indeterminate) ~ .mdc-checkbox__background
{
	border-color: #f44336;
	background-color: rgba(244, 67, 54, 0.35);
}

.mdc-checkbox--theme-dark.mdc-checkbox.demo-checkbox--custom-all .mdc-checkbox__native-control:enabled:checked ~ .mdc-checkbox__background, .mdc-checkbox--theme-dark.mdc-checkbox.demo-checkbox--custom-all .mdc-checkbox__native-control:enabled:indeterminate ~ .mdc-checkbox__background,
.mdc-theme--dark .mdc-checkbox.demo-checkbox--custom-all .mdc-checkbox__native-control:enabled:checked ~ .mdc-checkbox__background,
.mdc-theme--dark .mdc-checkbox.demo-checkbox--custom-all .mdc-checkbox__native-control:enabled:indeterminate ~ .mdc-checkbox__background
{
	border-color: #f44336;
	background-color: #f44336;
}

@keyframes mdc-checkbox-fade-in-background-3
{
	0%
	{
		border-color: #f44336;
		background-color: rgba(244, 67, 54, 0.35);
	}

	50%
	{
		border-color: #f44336;
		background-color: #f44336;
	}
}

@keyframes mdc-checkbox-fade-out-background-3
{
	0%, 80%
	{
		border-color: #f44336;
		background-color: #f44336;
	}

	100%
	{
		border-color: #f44336;
		background-color: rgba(244, 67, 54, 0.35);
	}
}

.mdc-checkbox--theme-dark.mdc-checkbox.demo-checkbox--custom-all.mdc-checkbox--anim-unchecked-checked .mdc-checkbox__native-control:enabled ~ .mdc-checkbox__background, .mdc-checkbox--theme-dark.mdc-checkbox.demo-checkbox--custom-all.mdc-checkbox--anim-unchecked-indeterminate .mdc-checkbox__native-control:enabled ~ .mdc-checkbox__background,
.mdc-theme--dark .mdc-checkbox.demo-checkbox--custom-all.mdc-checkbox--anim-unchecked-checked .mdc-checkbox__native-control:enabled ~ .mdc-checkbox__background,
.mdc-theme--dark .mdc-checkbox.demo-checkbox--custom-all.mdc-checkbox--anim-unchecked-indeterminate .mdc-checkbox__native-control:enabled ~ .mdc-checkbox__background
{
	animation-name: mdc-checkbox-fade-in-background-3;
}

.mdc-checkbox--theme-dark.mdc-checkbox.demo-checkbox--custom-all.mdc-checkbox--anim-checked-unchecked .mdc-checkbox__native-control:enabled ~ .mdc-checkbox__background, .mdc-checkbox--theme-dark.mdc-checkbox.demo-checkbox--custom-all.mdc-checkbox--anim-indeterminate-unchecked .mdc-checkbox__native-control:enabled ~ .mdc-checkbox__background,
.mdc-theme--dark .mdc-checkbox.demo-checkbox--custom-all.mdc-checkbox--anim-checked-unchecked .mdc-checkbox__native-control:enabled ~ .mdc-checkbox__background,
.mdc-theme--dark .mdc-checkbox.demo-checkbox--custom-all.mdc-checkbox--anim-indeterminate-unchecked .mdc-checkbox__native-control:enabled ~ .mdc-checkbox__background
{
	animation-name: mdc-checkbox-fade-out-background-3;
}

.mdc-checkbox.demo-checkbox--custom-stroke-and-fill .mdc-checkbox__native-control:enabled:not(:checked):not(:indeterminate) ~ .mdc-checkbox__background
{
	border-color: #2196f3;
	background-color: transparent;
}

.mdc-checkbox.demo-checkbox--custom-stroke-and-fill .mdc-checkbox__native-control:enabled:checked ~ .mdc-checkbox__background,
.mdc-checkbox.demo-checkbox--custom-stroke-and-fill .mdc-checkbox__native-control:enabled:indeterminate ~ .mdc-checkbox__background
{
	border-color: #9c27b0;
	background-color: #9c27b0;
}

@keyframes mdc-checkbox-fade-in-background-4
{
	0%
	{
		border-color: #2196f3;
		background-color: transparent;
	}

	50%
	{
		border-color: #9c27b0;
		background-color: #9c27b0;
	}
}

@keyframes mdc-checkbox-fade-out-background-4
{
	0%, 80%
	{
		border-color: #9c27b0;
		background-color: #9c27b0;
	}

	100%
	{
		border-color: #2196f3;
		background-color: transparent;
	}
}

.mdc-checkbox.demo-checkbox--custom-stroke-and-fill.mdc-checkbox--anim-unchecked-checked .mdc-checkbox__native-control:enabled ~ .mdc-checkbox__background, .mdc-checkbox.demo-checkbox--custom-stroke-and-fill.mdc-checkbox--anim-unchecked-indeterminate .mdc-checkbox__native-control:enabled ~ .mdc-checkbox__background
{
	animation-name: mdc-checkbox-fade-in-background-4;
}

.mdc-checkbox.demo-checkbox--custom-stroke-and-fill.mdc-checkbox--anim-checked-unchecked .mdc-checkbox__native-control:enabled ~ .mdc-checkbox__background, .mdc-checkbox.demo-checkbox--custom-stroke-and-fill.mdc-checkbox--anim-indeterminate-unchecked .mdc-checkbox__native-control:enabled ~ .mdc-checkbox__background
{
	animation-name: mdc-checkbox-fade-out-background-4;
}
